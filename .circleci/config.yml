version: 2
jobs:
  build:
    machine: true
    steps:
      - run:
          name: Download mock-app from Bucket to build it
          command: wget -O app.zip $DOWNLOAD_APP_URI
      - run:
          name: Unzip archive & Build Image
          command: |
            unzip app.zip && cd $GITHUB_ARCHIVE_ROOT_DIR
            docker build -t $MOCK_APP_DOMAIN .
      - run:
          name: Install flynn
          command: |
            sudo curl -sSL -A "`uname -sp`" https://dl.flynn.io/cli | sudo zcat >/tmp/flynn
            sudo chmod +x /tmp/flynn
            sudo mv /tmp/flynn /usr/local/bin/flynn
#      - run:
#          name: Link docker with flynn
#          command: |
#            export DOCKER_CA_DIR=/etc/docker/certs.d/docker.${FLYNN_CONTROLLER_URL}
#            sudo mkdir -p $DOCKER_CA_DIR
#            sudo cp ~/.flynn/ca-certs/default.pem ${DOCKER_CA_DIR}/ca.crt
      - run:
          name: Add cluster
          command: |
            if ! [[ "$(flynn cluster | grep "${FLYNN_CLUSTER_NAME}")" ]];
            then
                flynn cluster add -f --no-git --docker -d -p ${FLYNN_TLS_PIN} ${FLYNN_CLUSTER_NAME} ${FLYNN_CONTROLLER_URL} ${FLYNN_CONTROLLER_KEY};
            fi;

            flynn docker login || echo "Cert not found, copy it"
            export DOCKER_CA_DIR=/etc/docker/certs.d/docker.${FLYNN_CONTROLLER_URL}
            sudo mkdir -p $DOCKER_CA_DIR
            sudo cp ~/.flynn/ca-certs/default.pem ${DOCKER_CA_DIR}/ca.crt
            flynn docker set-push-url
            flynn docker login
      - run:
          name: Create app
          command: flynn create --remote "" $MOCK_APP_DOMAIN || echo "Okay, app already exists."
      - run:
          name: Push app
          command: flynn -a $MOCK_APP_DOMAIN -c ${FLYNN_CLUSTER_NAME} docker push $MOCK_APP_DOMAIN
      - run:
          name: Scale app
          command: flynn -a $MOCK_APP_DOMAIN -c ${FLYNN_CLUSTER_NAME} scale app=1

#      - run:
#          name: Install Heroku client
#          command: wget -qO- https://toolbelt.heroku.com/install-ubuntu.sh | sh
#      - run:
#          name: Create Heroku app
#          command: heroku create --region=eu --json $MOCK_APP_DOMAIN >> heroku_create.json
#      - run:
#          name: Login to registry
#          command: heroku container:login
#      - run:
#          name: Deploy to Heroku
#          command: |
#            cd $GITHUB_ARCHIVE_ROOT_DIR
#            heroku container:push web --app $MOCK_APP_DOMAIN
#            heroku container:release web --app $MOCK_APP_DOMAIN
#      - run:
#          name: App info
#          command: |
#            sudo apt-get install jq
#            cat heroku_create.json | jq .

